{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ARYAA CHOUDHARI\\\\weather-app-5\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\n/*\r\nTo do:\r\nNight weather shift\r\nChange description\r\nChange the number of boxes so arrows work properly - something about dynamic\r\n*/\n\nimport { useEffect, useState } from \"react\";\nimport SearchBar from \"./searchBar\";\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [location, setLocation] = useState(\"London\");\n  //Lat is latitude as a float\n  //Lon is longitude as a float\n  const [lat, setLat] = useState(\"51.0\");\n  const [lon, setLon] = useState(\"1.0\");\n  //Changing the weather view from hourly to weekly or vise-versa\n  const [weatherView, setWeatherView] = useState(\"Hourly\");\n  const [offset, setOffset] = useState(0);\n\n  //Used to change the location by passing it to the child component\n  const handleLocationChange = newLocation => {\n    setLocation(newLocation);\n  };\n\n  //Used to change the latitude\n  const handleLatChange = newLat => {\n    setLat(newLat);\n  };\n  //Used to change the longitude\n  const handleLonChange = newLon => {\n    setLon(newLon);\n  };\n  const handleWeatherViewChange = newWeatherView => {\n    if (weatherView === \"Hourly\" && newWeatherView !== \"Hourly\") {\n      setWeatherView(newWeatherView);\n      setOffset(0);\n    } else if (weatherView === \"Weekly\" && newWeatherView !== \"Weekly\") {\n      setWeatherView(newWeatherView);\n      setOffset(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onLocationChange: handleLocationChange,\n          onLatChange: handleLatChange,\n          onLonChange: handleLonChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(Weather, {\n          location: location,\n          lat: lat,\n          lon: lon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MainInformation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"forecasts\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Forecast, {\n            type: \"Hourly\",\n            onWeatherViewChange: () => handleWeatherViewChange(\"Hourly\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n            type: \"Weekly\",\n            onWeatherViewChange: () => handleWeatherViewChange(\"Weekly\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"weather-container\",\n          children: /*#__PURE__*/_jsxDEV(WeatherContainer, {\n            lat: lat,\n            lon: lon,\n            currentWeatherView: weatherView,\n            offset: offset,\n            onOffsetChange: offset => setOffset(offset)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n// logo component should have 2 modes - light and dark - only dark implemented \n_s(App, \"Afw1uZhIBVcXDsCCjnychiOgLr4=\");\n_c = App;\nfunction Logo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"logo\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      class: \"logo-img\",\n      src: \"logo-dark.png\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n//Displays the current weather information\n_c2 = Logo;\nfunction Weather({\n  location,\n  lat,\n  lon\n}) {\n  _s2();\n  const [temp, setTemp] = useState(0);\n  const [weatherType, setWeatherType] = useState(0);\n  const [humidity, setHumidity] = useState(0);\n  const [wind, setWind] = useState(0);\n  useEffect(() => {\n    const APIKey = '137d15d7a9080968e84a1462718ab6e2';\n\n    //Fetch the data with metric units\n    //No way to get precipitation - not in JSON response\n    fetch(`https://pro.openweathermap.org/data/2.5/weather?&location=${location}&lat=${lat}&lon=${lon}&appid=${APIKey}&units=metric`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    })\n    //Data isn't hourly but every three hours\n    .then(data => {\n      setTemp(Math.round(data['main']['temp']));\n      //Rain has light rain and moderate rain, to get the appropriate type the description is needed\n      setWeatherType(data['weather'][0]['main'] === \"Rain\" ? data['weather'][0]['description'] : data['weather'][0]['main']);\n      setHumidity(data['main']['humidity']);\n      //Windspeed recieved in m/s, to convert to km/h multiply by 3.6\n      setWind(Math.round(data['wind']['speed'], 2) * 3.6);\n    });\n  }, [location, lat, lon]);\n  let imageSrc = getWeatherImage(weatherType);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"main-location\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", location, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", weatherType, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"main-weather-icon\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"main-weather-img\",\n        src: imageSrc,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"main-temperature\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\" \", temp, \"\\xB0c \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"main-information\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"humidity\",\n        children: [\" Humidity: \", humidity, \"% \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"wind\",\n        children: [\" Wind: \", wind, \"km/h \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n//Add information from API\n//could possibly include a map\n_s2(Weather, \"T2T0W10Vq/MLXD18kVg7caj/vy8=\");\n_c3 = Weather;\nfunction MainInformation() {\n  _s3();\n  useEffect(() => {\n    const APIKey = '137d15d7a9080968e84a1462718ab6e2';\n    const layer = 'precipitation_new';\n    const z = '0';\n    const x = '1';\n    const y = '1';\n\n    //Fetch map\n    fetch(`https://tile.openweathermap.org/map/${layer}/${z}/${x}/${y}.png?appid=${APIKey}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"main-info\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"current weather description and information goes here..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n\n//Button for each forecast view\n//Hourly and Weekly\n_s3(MainInformation, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c4 = MainInformation;\nfunction Forecast({\n  type,\n  onWeatherViewChange\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    class: \"forecast-btn\",\n    onClick: onWeatherViewChange,\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", type, \" Forecast \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n\n//Gets the weather data for each hour\n_c5 = Forecast;\nfunction WeatherContainer({\n  lat,\n  lon,\n  currentWeatherView,\n  offset,\n  onOffsetChange\n}) {\n  _s4();\n  const numOfBoxes = 8;\n  const [maxBoxes, setMaxBoxes] = useState(24);\n  const [weatherData, setWeatherData] = useState([]);\n  const responsive = {\n    superLargeDesktop: {\n      breakpoint: {\n        max: 4000,\n        min: 3000\n      },\n      items: 8\n    },\n    desktop: {\n      breakpoint: {\n        max: 3000,\n        min: 1024\n      },\n      items: 7\n    },\n    tablet: {\n      breakpoint: {\n        max: 1024,\n        min: 700\n      },\n      items: 5\n    },\n    smallTablet: {\n      breakpoint: {\n        max: 700,\n        min: 570\n      },\n      items: 4\n    },\n    mobile: {\n      breakpoint: {\n        max: 570,\n        min: 0\n      },\n      items: 3\n    }\n  };\n  useEffect(() => {\n    const APIKey = '137d15d7a9080968e84a1462718ab6e2';\n    //Fetch the data with metric units\n    if (currentWeatherView === \"Hourly\") {\n      setMaxBoxes(24);\n      fetch(`https://pro.openweathermap.org/data/2.5/forecast/hourly?lat=${lat}&lon=${lon}&appid=${APIKey}&cnt=24&units=metric`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      }).then(data => {\n        let hourData = data['list'];\n        //Intialise the array\n        let newWeatherData = [];\n        for (let i = 0; i < numOfBoxes; i++) {\n          //Get the data from the JSON\n          let id = offset + i;\n          let time = Number(hourData[id]['dt_txt'].split(' ')[1].split(\":\")[0]);\n          time = formatTime(time);\n          let temp = Math.round(hourData[id]['main']['temp']);\n          let weatherType = hourData[id]['weather'][0]['main'];\n          if (weatherType === \"Rain\") {\n            weatherType = hourData[id]['weather'][0]['description'];\n          }\n          newWeatherData.push({\n            id: id,\n            time: time,\n            temp: temp,\n            weatherType: weatherType\n          });\n        }\n        setWeatherData(newWeatherData);\n      });\n    } else if (currentWeatherView === \"Weekly\") {\n      setMaxBoxes(8);\n      fetch(`https://pro.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&appid=${APIKey}&cnt=${numOfBoxes}&units=metric`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      }).then(data => {\n        let dailyData = data['list'];\n        let newWeatherData = [];\n        for (let i = 0; i < numOfBoxes; i++) {\n          let id = offset + i;\n          //Multiply by 1000 because Date uses milliseconds\n          let time = new Date(Number(dailyData[id]['dt'] * 1000));\n          let timeString = findDay(time.getDay()) + \" \" + time.getDate();\n          let temp = Math.round(dailyData[id]['temp']['day']);\n          let weatherType = dailyData[id]['weather'][0]['main'];\n          if (weatherType === \"Rain\") {\n            weatherType = dailyData[id]['weather'][0]['description'];\n          }\n          newWeatherData.push({\n            id: id,\n            time: timeString,\n            temp: temp,\n            weatherType: weatherType\n          });\n        }\n        setWeatherData(newWeatherData);\n      });\n    }\n  }, [lat, lon, offset, currentWeatherView]);\n  return /*#__PURE__*/_jsxDEV(Carousel, {\n    responsive: responsive,\n    children: weatherData.map(weather => {\n      return /*#__PURE__*/_jsxDEV(WeatherInfoBox, {\n        time: weather.time,\n        temp: weather.temp,\n        weatherType: weather.weatherType\n      }, weather.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 19\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 7\n  }, this);\n}\n\n//Formats the time\n_s4(WeatherContainer, \"+VFdyGBaV0K8pjsaJfamC94mlYI=\");\n_c6 = WeatherContainer;\nfunction formatTime(time) {\n  if (time < 12) {\n    if (time === 0) {\n      time = \"12 AM\";\n    } else {\n      time = time + \" AM\";\n    }\n  } else {\n    if (time === 12) {\n      time = \"12 PM\";\n    } else {\n      time = time % 12 + \" PM\";\n    }\n  }\n  return time;\n}\n\n//Converts the day from a number into the string for the day\n//Starts at 0 - Sunday\nfunction findDay(day) {\n  const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n  return days[day];\n}\nfunction WeatherInfoBox({\n  time,\n  temp,\n  weatherType\n}) {\n  let imageSrc = getWeatherImage(weatherType);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", time, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", temp, \"\\xB0 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      class: \"weather-icon-small\",\n      src: imageSrc,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n}\n\n//Gets the weather image based on weatherType\n_c7 = WeatherInfoBox;\nfunction getWeatherImage(weatherType) {\n  let imageSrc = \"\";\n  if (weatherType === \"Clouds\") {\n    imageSrc = \"white-cloud.png\";\n  } else if (weatherType === \"Clear\") {\n    imageSrc = \"cloud-sunny.png\";\n  } else if (weatherType === \"light rain\") {\n    imageSrc = \"light-rain.png\";\n  } else if (weatherType === \"moderate rain\") {\n    imageSrc = \"heavy-rain.png\";\n  } else if (weatherType === \"Snow\") {\n    imageSrc = \"snowy.png\";\n  }\n  return imageSrc;\n}\n\n/* For getting data from the Weather API */\n\n//Gets the weather data for today, in an area\n//Lat is latitude as a float\n//Lon is longitude as a float\n//The limit for API calls is 2000 per day\nfunction getWeatherData(lat, lon) {\n  const APIKey = '137d15d7a9080968e84a1462718ab6e2';\n  fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${APIKey}`).then(response => {\n    if (response.ok) {\n      console.log(response.clone().json());\n      return response.json(); // Parse the response data as JSON\n    } else {\n      throw new Error('API request failed');\n    }\n  }).then(data => {\n    //Display data\n    console.log(data);\n  }).catch(error => {\n    //Display errors\n    console.error(error);\n  });\n}\nfunction getWeatherDataThreeHour(lat, lon) {\n  const APIKey = '137d15d7a9080968e84a1462718ab6e2';\n  return fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${APIKey}`).then(response => {\n    if (response.ok) {\n      console.log(response.clone().json());\n      return response.json(); // Parse the response data as JSON\n    } else {\n      throw new Error('API request failed');\n    }\n  });\n}\nfunction getWeatherDataThreeHourlocation(location) {\n  const APIKey = '137d15d7a9080968e84a1462718ab6e2';\n  return fetch(`https://api.openweathermap.org/data/2.5/forecast?location=${location}&appid=${APIKey}`).then(response => {\n    if (response.ok) {\n      console.log(response.clone().json());\n      return response.json(); // Parse the response data as JSON\n    } else {\n      throw new Error('API request failed');\n    }\n  });\n}\n\n//For testing that weather works\nfunction WeatherButton() {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => getWeatherDataThreeHour(51.0, 1.0)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 5\n  }, this);\n}\n_c8 = WeatherButton;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Logo\");\n$RefreshReg$(_c3, \"Weather\");\n$RefreshReg$(_c4, \"MainInformation\");\n$RefreshReg$(_c5, \"Forecast\");\n$RefreshReg$(_c6, \"WeatherContainer\");\n$RefreshReg$(_c7, \"WeatherInfoBox\");\n$RefreshReg$(_c8, \"WeatherButton\");","map":{"version":3,"names":["useEffect","useState","SearchBar","Carousel","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","location","setLocation","lat","setLat","lon","setLon","weatherView","setWeatherView","offset","setOffset","handleLocationChange","newLocation","handleLatChange","newLat","handleLonChange","newLon","handleWeatherViewChange","newWeatherView","children","id","onLocationChange","onLatChange","onLonChange","fileName","_jsxFileName","lineNumber","columnNumber","Logo","Weather","MainInformation","Forecast","type","onWeatherViewChange","class","WeatherContainer","currentWeatherView","onOffsetChange","_c","src","alt","_c2","_s2","temp","setTemp","weatherType","setWeatherType","humidity","setHumidity","wind","setWind","APIKey","fetch","then","response","ok","json","data","Math","round","imageSrc","getWeatherImage","_c3","_s3","layer","z","x","y","_c4","onClick","_c5","_s4","numOfBoxes","maxBoxes","setMaxBoxes","weatherData","setWeatherData","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","smallTablet","mobile","hourData","newWeatherData","i","time","Number","split","formatTime","push","dailyData","Date","timeString","findDay","getDay","getDate","map","weather","WeatherInfoBox","_c6","day","days","_c7","getWeatherData","console","log","clone","Error","catch","error","getWeatherDataThreeHour","getWeatherDataThreeHourlocation","WeatherButton","_c8","$RefreshReg$"],"sources":["C:/Users/ARYAA CHOUDHARI/weather-app-5/src/App.js"],"sourcesContent":["/*\r\nTo do:\r\nNight weather shift\r\nChange description\r\nChange the number of boxes so arrows work properly - something about dynamic\r\n*/\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport SearchBar from \"./searchBar\";\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\n\r\n\r\nfunction App() {\r\n  const [location, setLocation] = useState(\"London\");\r\n  //Lat is latitude as a float\r\n  //Lon is longitude as a float\r\n  const [lat, setLat] = useState(\"51.0\");\r\n  const [lon, setLon] = useState(\"1.0\");\r\n  //Changing the weather view from hourly to weekly or vise-versa\r\n  const [weatherView, setWeatherView] = useState(\"Hourly\");\r\n  const [offset, setOffset] = useState(0);\r\n\r\n  //Used to change the location by passing it to the child component\r\n  const handleLocationChange = newLocation => {\r\n    setLocation(newLocation);\r\n  }\r\n\r\n  //Used to change the latitude\r\n  const handleLatChange = newLat => {\r\n    setLat(newLat);\r\n  }\r\n  //Used to change the longitude\r\n  const handleLonChange = newLon => {\r\n    setLon(newLon);\r\n  }  \r\n\r\n  const handleWeatherViewChange  = newWeatherView => {\r\n    if (weatherView === \"Hourly\" && newWeatherView !== \"Hourly\") {\r\n      setWeatherView(newWeatherView);\r\n      setOffset(0);\r\n    }\r\n    else if (weatherView === \"Weekly\" && newWeatherView !== \"Weekly\") {\r\n      setWeatherView(newWeatherView);\r\n      setOffset(0);\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <>    \r\n      <div>\r\n        <div id = \"header\">\r\n          <SearchBar  onLocationChange= {handleLocationChange} onLatChange = {handleLatChange} onLonChange = {handleLonChange}></SearchBar>\r\n          <Logo></Logo>\r\n        </div>\r\n        <div id = \"main\">\r\n          <Weather location = {location} lat = {lat} lon = {lon}></Weather>\r\n          <MainInformation></MainInformation>\r\n        </div>\r\n        <div id = \"forecasts\">\r\n          <div>\r\n            <Forecast type = \"Hourly\" onWeatherViewChange = {() => handleWeatherViewChange(\"Hourly\")}></Forecast>\r\n            <Forecast type = \"Weekly\" onWeatherViewChange = {() => handleWeatherViewChange(\"Weekly\")}></Forecast>\r\n          </div>\r\n          <div class = \"weather-container\">\r\n            <WeatherContainer lat = {lat} lon = {lon} currentWeatherView = {weatherView} offset = {offset} onOffsetChange = {(offset) => setOffset(offset)}></WeatherContainer>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// logo component should have 2 modes - light and dark - only dark implemented \r\nfunction Logo() {\r\n  return (\r\n    <div class = \"logo\">\r\n      <img class = \"logo-img\" src = \"logo-dark.png\" alt = \"\"></img>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n//Displays the current weather information\r\nfunction Weather({location, lat, lon}) {\r\n  const [temp, setTemp] = useState(0);\r\n  const [weatherType, setWeatherType] = useState(0);\r\n  const [humidity, setHumidity] = useState(0);\r\n  const [wind, setWind] = useState(0);\r\n \r\n\r\n  useEffect(() => {\r\n    const APIKey = '137d15d7a9080968e84a1462718ab6e2';\r\n\r\n    //Fetch the data with metric units\r\n    //No way to get precipitation - not in JSON response\r\n    fetch(`https://pro.openweathermap.org/data/2.5/weather?&location=${location}&lat=${lat}&lon=${lon}&appid=${APIKey}&units=metric`)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n      })\r\n      //Data isn't hourly but every three hours\r\n      .then(data => {\r\n        setTemp(Math.round(data['main']['temp']));\r\n        //Rain has light rain and moderate rain, to get the appropriate type the description is needed\r\n        setWeatherType(data['weather'][0]['main'] === \"Rain\" ? data['weather'][0]['description'] : data['weather'][0]['main']);\r\n        setHumidity(data['main']['humidity']);\r\n        //Windspeed recieved in m/s, to convert to km/h multiply by 3.6\r\n        setWind(Math.round(data['wind']['speed'], 2) * 3.6);\r\n      })\r\n  }, [location, lat, lon])\r\n\r\n  let imageSrc = getWeatherImage(weatherType);\r\n\r\n  return (\r\n    <div class = \"main-container\">\r\n      <div class = \"main-location\">\r\n        <h1> {location} </h1>\r\n        <p> {weatherType} </p>   \r\n      </div>\r\n      <div class = \"main-weather-icon\">\r\n        <img class = \"main-weather-img\" src = {imageSrc} alt = \"\"></img>\r\n      </div>\r\n      <div class = \"main-temperature\">\r\n        <h1> {temp}°c </h1>\r\n      </div>\r\n      <div class = \"main-information\">\r\n        <div class = \"humidity\"> Humidity: {humidity}% </div>\r\n        <div class = \"wind\"> Wind: {wind}km/h </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n//Add information from API\r\n//could possibly include a map\r\nfunction MainInformation() {\r\n  useEffect(() => {\r\n    const APIKey = '137d15d7a9080968e84a1462718ab6e2';\r\n    const layer = 'precipitation_new';\r\n    const z = '0';\r\n    const x = '1';\r\n    const y = '1';\r\n\r\n    //Fetch map\r\n    fetch(`https://tile.openweathermap.org/map/${layer}/${z}/${x}/${y}.png?appid=${APIKey}`)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n      })\r\n  },)\r\n\r\n  return (\r\n    <div class = \"main-info\">\r\n      <p>current weather description and information goes here..</p>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n//Button for each forecast view\r\n//Hourly and Weekly\r\nfunction Forecast({type, onWeatherViewChange}) {\r\n  return (\r\n    <button class = \"forecast-btn\" onClick = {onWeatherViewChange}>\r\n      <h2> {type} Forecast </h2>\r\n    </button>\r\n  )\r\n}\r\n\r\n//Gets the weather data for each hour\r\nfunction WeatherContainer({lat, lon, currentWeatherView, offset, onOffsetChange}) {\r\n  const numOfBoxes = 8;\r\n  const [maxBoxes, setMaxBoxes] = useState(24);\r\n  const [weatherData, setWeatherData] = useState([]);\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 8\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 7\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 700 },\r\n      items: 5\r\n    },\r\n    smallTablet: { \r\n      breakpoint: { max: 700, min: 570 },\r\n      items: 4\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 570, min: 0 },\r\n      items: 3\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const APIKey = '137d15d7a9080968e84a1462718ab6e2';\r\n    //Fetch the data with metric units\r\n    if (currentWeatherView === \"Hourly\") {\r\n      setMaxBoxes(24);\r\n      fetch(`https://pro.openweathermap.org/data/2.5/forecast/hourly?lat=${lat}&lon=${lon}&appid=${APIKey}&cnt=24&units=metric`)\r\n        .then(response => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          }\r\n        })\r\n        .then(data => {\r\n          let hourData = data['list'];\r\n          //Intialise the array\r\n          let newWeatherData = [];\r\n          for (let i = 0; i < numOfBoxes; i++) {\r\n            //Get the data from the JSON\r\n            let id = offset + i;\r\n            let time = Number(hourData[id]['dt_txt'].split(' ')[1].split(\":\")[0]);\r\n            time = formatTime(time);\r\n            let temp = Math.round(hourData[id]['main']['temp']);\r\n            let weatherType = hourData[id]['weather'][0]['main'];\r\n            if (weatherType === \"Rain\") {\r\n              weatherType = hourData[id]['weather'][0]['description']\r\n            }\r\n            newWeatherData.push({id: id, time: time, temp: temp, weatherType: weatherType});\r\n          }\r\n          setWeatherData(newWeatherData);\r\n        })\r\n    }\r\n    else if (currentWeatherView === \"Weekly\") {\r\n      setMaxBoxes(8);\r\n      fetch(`https://pro.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&appid=${APIKey}&cnt=${numOfBoxes}&units=metric`)\r\n        .then(response => {\r\n          if (response.ok) {\r\n            return response.json();\r\n          }\r\n        })\r\n        .then(data => {\r\n          let dailyData = data['list'];\r\n          let newWeatherData = [];\r\n          for (let i = 0; i < numOfBoxes; i++) {\r\n            let id = offset + i;\r\n            //Multiply by 1000 because Date uses milliseconds\r\n            let time = new Date(Number(dailyData[id]['dt'] * 1000));\r\n            let timeString = findDay(time.getDay()) + \" \" + time.getDate();\r\n            let temp = Math.round(dailyData[id]['temp']['day']);\r\n            let weatherType = dailyData[id]['weather'][0]['main'];\r\n            if (weatherType === \"Rain\") {\r\n              weatherType = dailyData[id]['weather'][0]['description'];\r\n            }\r\n            newWeatherData.push({id: id, time: timeString, temp: temp, weatherType: weatherType});\r\n          }\r\n          setWeatherData(newWeatherData);\r\n        })\r\n    }\r\n  }, [lat, lon, offset, currentWeatherView])\r\n\r\n  return (\r\n      <Carousel responsive={responsive}>\r\n        {weatherData.map(weather => {\r\n          return (<WeatherInfoBox key = {weather.id} time = {weather.time} temp = {weather.temp} weatherType = {weather.weatherType}></WeatherInfoBox>)\r\n        })}\r\n      </Carousel>\r\n    \r\n  )\r\n}\r\n\r\n\r\n\r\n//Formats the time\r\nfunction formatTime(time) {\r\n  if (time < 12) {\r\n    if (time === 0) {\r\n      time = \"12 AM\";\r\n    }\r\n    else {\r\n      time = time + \" AM\";\r\n    }\r\n  }\r\n  else {\r\n    if (time === 12) {\r\n      time = \"12 PM\"\r\n    }\r\n    else {\r\n      time = time % 12 + \" PM\";\r\n    }\r\n  }\r\n  return time;\r\n}\r\n\r\n//Converts the day from a number into the string for the day\r\n//Starts at 0 - Sunday\r\nfunction findDay(day) {\r\n  const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n  return days[day];\r\n}\r\n\r\nfunction WeatherInfoBox({time, temp, weatherType}) {\r\n  let imageSrc = getWeatherImage(weatherType);\r\n  return (\r\n    <div class = \"box\">\r\n      <h1> {time} </h1>\r\n      <p> {temp}° </p>\r\n      <img class = \"weather-icon-small\" src = {imageSrc} alt = \"\"></img>\r\n    </div>\r\n  )\r\n}\r\n\r\n//Gets the weather image based on weatherType\r\nfunction getWeatherImage(weatherType) {\r\n  let imageSrc = \"\";\r\n  if (weatherType === \"Clouds\") {\r\n    imageSrc = \"white-cloud.png\";\r\n  }\r\n  else if (weatherType === \"Clear\") {\r\n    imageSrc = \"cloud-sunny.png\";\r\n  }\r\n  else if (weatherType === \"light rain\") {\r\n    imageSrc = \"light-rain.png\";\r\n  }\r\n  else if (weatherType === \"moderate rain\") {\r\n    imageSrc = \"heavy-rain.png\";\r\n  }\r\n  else if (weatherType === \"Snow\") {\r\n    imageSrc = \"snowy.png\";\r\n  }\r\n  return imageSrc;\r\n}\r\n\r\n/* For getting data from the Weather API */\r\n\r\n//Gets the weather data for today, in an area\r\n//Lat is latitude as a float\r\n//Lon is longitude as a float\r\n//The limit for API calls is 2000 per day\r\nfunction getWeatherData(lat, lon) {\r\n  const APIKey = '137d15d7a9080968e84a1462718ab6e2';\r\n\r\n  fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${APIKey}`)\r\n    .then(response => {\r\n      if (response.ok) {\r\n        console.log(response.clone().json());\r\n        return response.json(); // Parse the response data as JSON\r\n      } else {\r\n        throw new Error('API request failed');\r\n      }\r\n    })\r\n    .then(data => {\r\n      //Display data\r\n      console.log(data);\r\n    })\r\n    .catch(error => {\r\n      //Display errors\r\n      console.error(error);\r\n    });\r\n}\r\n\r\nfunction getWeatherDataThreeHour(lat, lon) {\r\n  const APIKey = '137d15d7a9080968e84a1462718ab6e2';\r\n\r\n  return fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${APIKey}`)\r\n    .then(response => {\r\n      if (response.ok) {\r\n        console.log(response.clone().json());\r\n        return response.json(); // Parse the response data as JSON\r\n      } else {\r\n        throw new Error('API request failed');\r\n      }\r\n    })\r\n}\r\n\r\nfunction getWeatherDataThreeHourlocation(location) {\r\n  const APIKey = '137d15d7a9080968e84a1462718ab6e2';\r\n\r\n  return fetch(`https://api.openweathermap.org/data/2.5/forecast?location=${location}&appid=${APIKey}`)\r\n    .then(response => {\r\n      if (response.ok) {\r\n        console.log(response.clone().json());\r\n        return response.json(); // Parse the response data as JSON\r\n      } else {\r\n        throw new Error('API request failed');\r\n      }\r\n    })\r\n}\r\n\r\n//For testing that weather works\r\nfunction WeatherButton() {\r\n  return (\r\n    <button onClick = {() => getWeatherDataThreeHour(51.0, 1.0)}></button>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}